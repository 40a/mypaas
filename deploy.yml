- name: Create VMs
  hosts: localhost
  tags: ovh
  roles:
    - { role: ovh_servers, tags: ['ovh', 'ovh_servers'] }
  vars_files:
    - vars.yml
    - vars-os-users.yml
  environment:
    OVH_ENDPOINT: "{{ ovh.endpoint }}"
    OVH_APPLICATION_KEY: "{{ ovh.application_key }}"
    OVH_APPLICATION_SECRET: "{{ ovh.application_secret }}"
    OVH_CONSUMER_KEY: "{{ ovh.consumer_key }}"

- hosts: softwarefactory
  tags: swf
  remote_user: ubuntu
  become: true
  roles:
    - { role: backup, tags: ['swf', 'admin', 'backup'] }
    - { role: basic_server_setup, tags: ['swf', 'admin', 'base'] }
    - { role: ovh, tags: ['admin', 'ovh'] }
    - { role: fail2ban, tags: ['swf', 'admin', 'fail2ban'] }
    - { role: monitoring, tags: ['admin', 'monitoring'] }
    - { role: vpn, tags: ['swf', 'admin', 'vpn'] }
    - { role: letsencrypt, tags: ['swf', 'admin', 'letsencrypt'] }
    - { role: ldap, tags: ['swf', 'admin', 'ldap'] }
    - { role: rundeck, tags: ['swf', 'admin', 'rundeck'] }
    - { role: registry, tags: ['swf', 'admin', 'registry'] }
    - { role: gitlab, tags: ['swf', 'admin', 'gitlab'] }
    - { role: jenkins, tags: ['swf', 'admin', 'jenkins'] }
    - { role: owncloud, tags: ['swf', 'owncloud'] }
    - { role: odoo, tags: ['swf', 'odoo'] }
    - { role: jenkins_slave_config, tags: ['swf', 'admin', 'jenkins', 'jenkins__slave_config'] }
    - { role: jenkins_config, tags: ['swf', 'admin', 'jenkins', 'jenkins_config'] }
    - { role: sf_config, tags: ['swf', 'admin', 'jenkins', 'sf_config'] }
  vars_files:
    - vars.yml
    - vars-os-users.yml
  environment:
    OVH_ENDPOINT: "{{ ovh.endpoint }}"
    OVH_APPLICATION_KEY: "{{ ovh.application_key }}"
    OVH_APPLICATION_SECRET: "{{ ovh.application_secret }}"
    OVH_CONSUMER_KEY: "{{ ovh.consumer_key }}"

- hosts: docker_swarm_manager
  tags: docker_swarm_manager
  remote_user: ubuntu
  become: true
  roles:
    - { role: basic_server_setup, tags: ['base'] }
    - { role: fail2ban, tags: ['fail2ban'] }
    - { role: docker, tags: ['docker'] }
#    - { role: docker_cluster, tags: ['docker_cluster'] }
  vars_files:
    - vars.yml

#- hosts: swarm-master
#  tags: swarm-master
#  remote_user: ubuntu
#  roles:
#    - { role: docker-manager, tags: ['docker-manager'] }
#  vars_files:
#    - vars.yml

#- hosts: swarm-node
#  tags: swarm-node
#  remote_user: ubuntu
#  roles:
#    - { role: docker-node, tags: ['docker-node'] }
#  vars_files:
#    - vars.yml
