server {
	listen		[::]:80;
	listen		80;
	server_name	drive.{{ tld_hostname }};
	return		301 	https://$server_name$request_uri;
}
server {
	listen       [::]:443 ssl http2;
	listen       443 ssl http2;
	server_name  drive.{{ tld_hostname }};

	## SSL
	ssl_certificate      /etc/letsencrypt/live/admin.{{ tld_hostname }}/fullchain.pem;
	ssl_certificate_key  /etc/letsencrypt/live/admin.{{ tld_hostname }}/privkey.pem;
	ssl_dhparam /etc/ssl/private/{{ tld_hostname }}.dhparam.crt;
	add_header Strict-Transport-Security "max-age=31536000; includeSubdomains;";

	# Add headers to serve security related headers
	# Before enabling Strict-Transport-Security headers please read into this topic first.
	add_header X-Content-Type-Options nosniff;
	add_header X-Frame-Options "SAMEORIGIN";
	add_header X-XSS-Protection "1; mode=block";
	add_header X-Robots-Tag none;
	add_header X-Download-Options noopen;
	add_header X-Permitted-Cross-Domain-Policies none;
	
	location = /robots.txt {
		allow all;
		log_not_found off;
		access_log off;
	}

	#location ~* \.(?:svg|gif|png|html|ttf|woff|ico|jpg|jpeg)$ {
	#	try_files $uri /index.php$uri$is_args$args;
	#	# Optional: Don't log access to other assets
	#	access_log off;
	#}
	
	# Disable gzip to avoid the removal of the ETag header
        gzip off;

	location ~ ^/(?:updater|ocs-provider)(?:$|/) {
		try_files $uri $uri/ =404;
		index index.php;
	}
	location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ {
		return 404;
	}
	location ~ ^/(?:\.|autotest|occ|issue|indie|db_|console) {
		return 404;
	}
	location = /.well-known/carddav {
		return 301 $scheme://$host/remote.php/dav;
	}
	location = /.well-known/caldav {
		return 301 $scheme://$host/remote.php/dav;
	}
	error_page 403 /core/templates/403.php;
	error_page 404 /core/templates/404.php;

	location / {
                client_max_body_size 100M;
		proxy_pass   http://{{ netxcloud["ip"] }}:{{ netxcloud["port"] }};
		proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
		proxy_redirect off;
		proxy_buffering off;
		proxy_set_header        Host            $host;
		proxy_set_header        X-Real-IP       $remote_addr;
		proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header	X-Forwarded-Proto $scheme;
	}

	error_page   500 502 503 504  /50x.html;
	location = /50x.html {
	    root   /usr/share/nginx/html;
	}
}
